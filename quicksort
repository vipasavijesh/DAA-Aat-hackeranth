#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'quickSort' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts INTEGER_ARRAY arr as parameter.
#

def quickSort(arr):
    if len(arr) <= 1:
        return arr
    
    pivot = arr[len(arr) - 1]  # Choosing the last element as the pivot
    left = []
    right = []
    
    # Partitioning step
    for i in range(len(arr) - 1):
        if arr[i] < pivot:
            left.append(arr[i])
        else:
            right.append(arr[i])
    
    # Recursively sort left and right sub-arrays
    left_sorted = quickSort(left)
    right_sorted = quickSort(right)
    
    # Concatenate left_sorted + pivot + right_sorted
    return left_sorted + [pivot] + right_sorted

# Example usage:
if __name__ == '__main__':
    n = int(input().strip())  # Read the size of the array (not used directly)
    arr = list(map(int, input().rstrip().split()))  # Read the array to be sorted
    
    result = quickSort(arr)  # Perform quick sort on the array
    
    print(' '.join(map(str, result)))  # Print the sorted array elements space-separated


